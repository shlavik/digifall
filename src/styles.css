@font-face {
  font-family: pixel;
  font-style: normal;
  font-weight: normal;
  src: url("../fonts/7x7.ttf");
}

@font-face {
  font-family: pixel;
  font-style: normal;
  font-weight: bold;
  src: url("../fonts/5x5.ttf");
}

* {
  box-sizing: border-box;
  text-transform: lowercase;
}

*.focus:not(:active) {
  outline: 0.75rem dashed white;
  outline-offset: 1px;
}

*.focus:active {
  box-shadow: none;
  outline: none
}

*:focus {
  outline: none;
}

html,
body,
.app,
.game,
.overlay {
  display: flex;
  height: 100%;
  justify-content: center;
}

html {
  --color-0: hsl(60deg 20% 40%);
  --color-1: #90cc4d;
  --color-2: #c7aa4d;
  --color-3: #cc804d;
  --color-4: #b31d03;
  --color-5: #bd4fb3;
  --color-6: #831963;
  --color-7: #3755e6;
  --color-8: #33aab6;
  --color-9: #1e5b54;
  --color-base: hsl(60deg 20% 60%);
  --color-dark: hsl(60deg 20% 25%);
  --color-body: hsl(60deg 20% 10%);
  --color-black-04: rgb(0 0 0 / 40%);
  --color-black-08: rgb(0 0 0 / 80%);
  --color-ghost: rgb(255 255 255 / 20%);
  --color-gloss: rgb(255 255 255 / 60%);
  --color-invis-1: #10100b;
  --color-invis-2: #22221a;
  --pixel: 1px;
  --gloss: 0 -1px 0 var(--color-gloss);
  --gloss-inset: 0 1px 0 var(--color-gloss);
  --glow: 0 0 1px white;
  --glow-random: 0 0 1px var(--color-random);
  --shadow-0: 0 0 1px black;
  --shadow-1: 0 0.5rem 0.5rem var(--color-black-04);
  --shadow-2: 0 1rem 1rem var(--color-black-04);
  --shadow-3: 0 0 3rem 2rem var(--color-black-04);
  --shadow-inset: inset 0 0.5rem 0.5rem var(--color-black-04);

  color-scheme: only light;
  font-size: var(--pixel);
}

body {
  overflow: hidden;
  margin: 0;
  background-color: var(--color-body);
  color: white;
  font-family: pixel;
  font-size: 5rem;
  letter-spacing: 2rem;
  line-height: 1;
  text-indent: 2rem;
  text-shadow: var(--shadow-1);
  -webkit-user-select: none;
  user-select: none;
}

form {
  display: contents;
}

button,
input[type="text"],
input[type="checkbox"]+label {
  position: relative;
  padding: 2rem 4rem;
  margin: 4rem 0;
  font-family: inherit;
  font-size: 4rem;
  letter-spacing: inherit;
  text-indent: inherit;
}

button {
  border: none;
  background-color: white;
  color: black;
  cursor: pointer;
  font-weight: bold;
  line-height: inherit;
}

button:active {
  background-color: var(--color-black-08);
  color: white;
  font-weight: normal;
}

button.focus,
button:hover {
  background-color: var(--color-black-04);
  color: white;
}

input[type="text"] {
  padding: 1.25rem 0 1.25rem 3rem;
  border: 0.75rem solid white;
  background-color: transparent;
  box-shadow: var(--shadow-1), var(--shadow-inset);
  color: white;
  font-style: italic;
  line-height: 6rem;
  text-decoration: none;
  text-indent: 0;
  text-shadow: var(--shadow-1);
}

input[type="text"]::placeholder {
  overflow: visible;
  color: var(--color-dark);
  text-align: center;
}

input[type="text"]::selection {
  background-color: white;
  color: black;
}

input[type="checkbox"] {
  display: none;
  appearance: none;
}

input[type="checkbox"]+label {
  cursor: pointer;
  line-height: 6rem;
  text-indent: 0;
}

input[type="checkbox"]+label::after {
  position: absolute;
  right: 3rem;
  content: "o";
  letter-spacing: 0;
}

input[type="checkbox"]:checked+label::after {
  content: "Â¤";
}

input[type="checkbox"]:disabled+label {
  color: var(--color-0);
  cursor: not-allowed;
}

noscript {
  max-width: 0;
  padding-right: 160rem;
  margin: auto;
  font-size: 12rem;
  letter-spacing: 4rem;
  line-height: 1.75;
}

p {
  font-size: 4rem;
  letter-spacing: 1.5rem;
  line-height: 6rem;
  text-align: center;
  text-indent: 0;
}

.app {
    position: fixed;
    right: 0;
    left: 0;
    margin: auto;
}

.content,
.section-1,
.section-2,
.section-3,
.section-4 {
  position: relative;
  display: flex;
  width: 128rem;
  flex-direction: column;
  justify-content: space-evenly;
}

.big {
  font-size: 7rem;
  font-weight: normal;
  letter-spacing: 3rem;
  text-indent: 3rem;
}

.blur {
  filter: blur(3rem);
}

.board {
  --focus-bottom: calc(var(--focus-y) * 21rem);
  --focus-left: calc(var(--focus-x) * 21rem);

  position: relative;
  width: 128rem;
  height: 128rem;
  border: 1rem solid var(--color-dark);
  background-color: var(--color-body);
  background-image: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" width="8" height="8" fill-opacity=".6"><rect x="4" width="4" height="4" /><rect y="4" width="4" height="4" /></svg>');
  background-size: 6rem;
  box-shadow: var(--gloss-inset), var(--shadow-inset);
}

.board::before {
  position: absolute;
  z-index: 1;
  top: -1rem;
  left: -1rem;
  display: block;
  width: 128rem;
  height: 1rem;
  box-shadow: var(--shadow-inset);
  content: "";
}

.board.progress .card {
  cursor: progress;
}

.board:not(.progress) .card.focus {
  z-index: 3;
  box-shadow: none;
}

.board:not(.progress) .card.focus .current {
  box-sizing: border-box;
  outline: 0.75rem dashed white;
  outline-offset: -0.75rem;
  text-shadow: var(--shadow-0);
}

@media (hover: hover) and (pointer: fine) {
  .board:not(.progress) .card:hover {
    z-index: 2;
    box-shadow: none;
  }

  .board:not(.progress) .card:hover .current,
  .board:not(.progress) .card:hover .next {
    top: -1px;
    border-bottom: 1px solid var(--color);
    box-shadow: inset var(--gloss-inset), var(--shadow-1);
  }
}

.board:not(.progress) .card.longpress .current {
  top: 0;
  border-bottom: none;
  box-shadow: var(--shadow-0);
  color: var(--color);
  text-shadow: var(--shadow-0);
}

.board:not(.progress) .card.longpress .current::after {
  position: absolute;
  top: 0;
  display: block;
  width: 100%;
  height: 100%;
  animation: longpress 400ms ease-out forwards;
  background-color: white;
  content: "";
  mix-blend-mode: overlay;
  opacity: 0.6;
}

.board .ghost,
.board .slider {
  transition-duration: 200ms;
  transition-timing-function: cubic-bezier(0.445, 0.05, 0.55, 0.95);
}

.board .ghost {
  position: absolute;
  z-index: 1;
  bottom: 0;
  left: 0;
  width: 126rem;
  height: 126rem;
  background-color: transparent;
  mix-blend-mode: soft-light;
  outline: 1rem solid transparent;
  pointer-events: none;
}

.board .ghost.focus {
  background-color: var(--color-ghost);
  outline-color: var(--color-ghost);
}

.board .ghost.horizontal {
  transition-property: bottom, height;
}

.board .ghost.vertical {
  transition-property: left, width;
}

.board .ghost.horizontal.focus {
  bottom: var(--focus-bottom);
  height: 21rem;
  transition-property: bottom, height, background-color;
}

.board .ghost.vertical.focus {
  left: var(--focus-left);
  width: 21rem;
  transition-property: left, width, background-color;
}

.board .ghost.horizontal.blink {
  animation: blink 200ms steps(2, end) 2, shrink-horizontal 400ms ease 400ms forwards;
}

.board .ghost.vertical.blink {
  animation: blink 200ms steps(2, end) 2, shrink-vertical 400ms ease 400ms forwards;
}

.board .slider {
  position: absolute;
  z-index: 1;
  background-color: white;
  pointer-events: none;
}

.board.overflow .slider {
  background-color: var(--color-dark);
}

.board .slider.blink {
  animation: blink 200ms steps(2, end) 2, fade-out 400ms ease 400ms forwards;
}

.board .slider.focus {
  outline: none;
}

.board .slider.top,
.board .slider.bottom {
  left: -1rem;
  width: 128rem;
  height: 1rem;
  transition-property: left, width;
}

.board .slider.right,
.board .slider.left {
  bottom: -1rem;
  width: 1rem;
  height: 128rem;
  transition-property: bottom, height;
}

.board .slider.top.focus,
.board .slider.bottom.focus {
  left: var(--focus-left);
  width: 21rem;
}

.board .slider.right.focus,
.board .slider.left.focus {
  bottom: var(--focus-bottom);
  height: 21rem;
}

.board .slider.top {
  top: -1rem;
}

.board .slider.right {
  left: 126rem;
}

.board .slider.bottom {
  bottom: -1rem;
}

.board .slider.left {
  left: -1rem;
}

.card {
  position: absolute;
  bottom: calc(var(--card-y) * 21rem);
  left: calc(var(--card-x) * 21rem);
  width: 21rem;
  height: 21rem;
  box-shadow: var(--gloss), var(--shadow-2);
  cursor: pointer;
  transition-duration: calc(var(--card-duration) * 1ms);
  transition-property: bottom;
  transition-timing-function: cubic-bezier(0.56, 0, 1, 1);
  will-change: bottom;
}

.card.matt {
  box-shadow: var(--shadow-2);
}

.card .current,
.card .next {
  position: absolute;
  z-index: 1;
  width: 21rem;
  height: 21rem;
  box-sizing: content-box;
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  background-color: var(--color);
  box-shadow: var(--shadow-0);
  color: white;
  font-size: 13rem;
  line-height: 21rem;
  text-align: center;
}

.card .next {
  box-shadow: var(--gloss), var(--shadow-1);
  transform: rotateY(-180deg);
}

.card.plus {
  z-index: 2;
  box-shadow: none;
  perspective: 128rem;
}

.card.plus .value {
  transform: rotateY(-180deg);
  transform-style: preserve-3d;
  transition: transform 400ms ease;
}

.card.blink {
  box-shadow: none;
}

.card.blink .current {
  animation: blink 200ms steps(2, end) 2, fade-out 400ms ease 400ms forwards;
  box-shadow: none;
}

.dialog {
  position: absolute;
  height: 100vh;
}

.dialog .title {
  line-height: 2;
  word-break: break-all;
}

.energy {
  position: relative;
  display: flex;
  width: 100%;
  background-color: var(--color-dark);
  box-shadow: var(--gloss-inset), var(--shadow-inset);
  font-size: 7rem;
  letter-spacing: 1rem;
  text-indent: 1rem;
}

.energy .left-bar,
.energy .right-bar {
  overflow: hidden;
  padding: 1rem 0;
  box-shadow: var(--gloss), var(--shadow-1);
}

.energy .left-bar {
  background-color: white;
  text-align: right;
}

.energy .left-value {
  right: 0;
  color: var(--color-dark);
}

.energy .right-value {
  color: white;
}

.energy .left-bar.warning,
.energy .left-value.warning,
.energy .right-value.warning {
  animation: flick 2s infinite;
}

.exclam-fix p,
p.exclam-fix {
  position: relative;
  left: 1.6rem;
}

.game *.focus:not(:active) {
  outline-offset: -1rem;
}

.game .seedground {
  position: absolute;
  top: 50%;
  right: 50%;
  bottom: 50%;
  left: 50%;
  width: 100vh;
  height: 100vw;
  background-blend-mode: difference;
  background-position: center;
  transform: translate(-50%, -50%) rotate(90deg);
}

.game .content {
  background-color: var(--color-base);
  box-shadow:
    -1rem 0 0 0 var(--color-base),
    1rem 0 0 0 var(--color-base),
    var(--shadow-3);
}

.game .digifall,
.game .digifall:hover {
  position: relative;
  width: 100%;
  flex-grow: 1;
  border: none;
  margin: auto;
  background-color: var(--color-dark);
  box-shadow: var(--gloss-inset), var(--shadow-inset);
  color: var(--color-0);
  font-size: inherit;
  font-weight: bold;
  text-shadow: var(--gloss), var(--shadow-1);
}

.game .digifall:active,
.game .digifall.screen {
  color: var(--color-dark);
}

.game .digifall.focus,
.game .digifall:active,
.game .digifall.screen,
.game .digifall.screen.focus,
.game .digifall.screen:hover {
  background-color: var(--color-dark);
  text-shadow: var(--shadow-0);
}

.game-over.new-record .big,
.game-over.new-record .score {
  color: var(--color-random);
}

.game-over .score:active {
  color: var(--color-invis-2);
  text-shadow: var(--glow);
}

.game-over.new-record .score:active {
  text-shadow: var(--glow-random);
}

.game-over .energy {
  background-color: transparent;
  box-shadow: none;
}

.game-over .left-value {
  color: black;
}

.game-over .energy-out {
  position: absolute;
  width: 100%;
  height: 7rem;
  padding-top: 2rem;
  padding-left: 10rem;
  font-size: 0;
  text-indent: 0;
}

.game-over .letter {
  display: inline-block;
  min-width: 7rem;
  font-size: 5rem;
  font-weight: bold;
}

.leaderboard .page,
.leaderboard .type {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0;
  margin: 0;
}

.leaderboard .pages {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 1rem;
  margin: auto;
}

.leaderboard .type {
  --color: white;

  justify-content: space-evenly;
  padding: 11rem 0;
  color: var(--color);
  cursor: pointer;
}

.leaderboard .type:active {
  --color: var(--color-invis-1);

  text-shadow: 0 0 1px white;
}

.leaderboard .type::before,
.leaderboard .type::after {
  display: block;
  border-style: solid;
  content: "";
}

.leaderboard .type::before {
  border-width: 3rem 3rem 3rem 0;
  border-color: transparent var(--color) transparent transparent;
}

.leaderboard .type::after {
  border-width: 3rem 0 3rem 3rem;
  border-color: transparent transparent transparent var(--color);
}

.leaderboard .type:active::before,
.leaderboard .type:active::after {
  filter: drop-shadow(0 0 0.75px white);
}

.leaderboard .page {
  width: 13rem;
  height: 13rem;
  color: var(--color);
  cursor: pointer;
  font-weight: bold;
}

.leaderboard .page.active {
  border: 1rem solid var(--color);
  box-shadow: var(--shadow-1), var(--shadow-inset);
}

.leaderboard .page.active:active {
  border-color: var(--color-invis-2);
  box-shadow: 0 0 1px var(--color), inset 0 0 1px var(--color);
}

.leaderboard .page:active {
  color: var(--color-invis-2);
  text-shadow: 0 0 1px var(--color);
}

.leaderboard dl {
  position: absolute;
  display: flex;
  width: 100%;
  flex-direction: column;
  align-items: stretch;
  padding: 0 1rem;
  margin: 0;
  font-size: 4rem;
  list-style: none;
}

.leaderboard dt {
  position: relative;
  height: 5rem;
  margin: 1rem;
}

.leaderboard dt::before {
  position: absolute;
  top: 5.25rem;
  right: 100%;
  color: var(--color-0);
  content: attr(data-nth);
  font-weight: bold;
}

.leaderboard .player-name {
  overflow: hidden;
  width: 100%;
  padding: 1rem 0;
  text-overflow: ellipsis;
}

.leaderboard dd {
  display: flex;
  height: 4rem;
  margin: 1rem 0 2rem;
  text-align: right;
  text-indent: 0;
}

.leaderboard dd::before {
  position: relative;
  box-sizing: border-box;
  flex: 1;
  order: -2;
  border-top: 0.75rem solid white;
  border-right: 0.75rem solid white;
  margin-right: 2rem;
  content: "";
}

.leaderboard dt.self,
.leaderboard dd.self {
  color: var(--color-random);
}

.leaderboard dd.self::before {
  border-color: var(--color-random);
}

.log {
  position: absolute;
  top: 0;
  left: 0;
  display: flex;
  overflow: hidden;
  width: 100%;
  height: 100%;
  flex-direction: column;
  align-items: flex-start;
  justify-content: flex-end;
  padding: 1rem 4rem;
  margin: 0;
  color: white;
  font-size: 5rem;
  letter-spacing: 1rem;
  line-height: 7rem;
  list-style-type: none;
  text-indent: 1rem;
  text-shadow: var(--gloss), var(--shadow-1);
}

.log li {
  display: flex;
  height: 7rem;
}

.log .extra {
  color: var(--color-random);
}

.log .sum {
  position: absolute;
  right: 4rem;
}

.log .collapse {
  margin-top: -7rem;
}

.overflow {
  overflow: hidden;
}

.overlay {
  position: fixed;
  z-index: 3;
  width: 100%;
  background-color: var(--color-black-08);
}

.overlay button {
  height: 9rem;
  padding: 0;
  border: 1rem solid white;
  margin: 6rem 0;
  box-shadow: var(--shadow-2);
}

.overlay button:active {
  border: 0.75rem solid white;
}

.overlay .big {
  position: relative;
}

.overlay .big .version {
  position: absolute;
  right: 24.75rem;
  bottom: -4.5rem;
  font-size: 2.5rem;
  font-weight: bold;
  letter-spacing: 1rem;
}

.overlay .section-4 button {
  margin: 0;
}

.overlay .github-corner {
  position: fixed;
  top: 0;
  right: 0;
  width: 20rem;
  color: black;
  fill: white;
  text-indent: 0;
}

@media (max-aspect-ratio: 1/1) {
  .overlay .github-corner {
    display: none;
  }
}

.overlay .github-corner .octo-arm {
  transform-origin: 130px 106px;
}

.overlay .github-corner:hover .octo-arm {
  animation: octocat-wave 560ms ease-in-out;
}

.player-name.blink {
  animation: blink 200ms steps(2, end) 2;
}

.section-1 {
  flex-basis: 37rem;
  text-align: center;
}

@media (max-aspect-ratio: 128/203) {
  .section-1 {
    flex-basis: 44rem;
  }
}

@media (max-aspect-ratio: 128/214) {
  .section-1 {
    flex-basis: 51rem;
  }
}

.section-2 {
  flex-basis: 13rem;
}

.section-3 {
  overflow: hidden;
  flex-basis: 128rem;
}

.section-3 .col,
.section-4 .col,
.section-3 .row {
  display: flex;
  width: 100%;
  padding: 0 3rem;
}

.section-3 .col,
.section-4 .col {
  flex-direction: column;
  justify-content: center;
}

.section-3 .row {
  align-items: center;
  justify-content: space-between;
}

.section-3 .row button {
  flex: 1;
}

.section-3 .row button:first-child {
  margin-right: 4rem;
}

.section-3 .row button:last-child {
  margin-left: 4rem;
}

.section-4 {
  flex-basis: 9rem;
}

.score {
  display: flex;
  align-items: baseline;
  padding: 3rem;
  cursor: pointer;
  white-space: nowrap;
}

.score.focus,
.score:active {
  text-shadow: var(--shadow-0);
}

.score:active {
  color: var(--color-base);
}

.score .type {
  display: none;
}

.score.focus .type,
.score:hover .type,
.score .type.visible {
  display: inline;
}

.score .value {
  width: 100%;
  font-size: 7rem;
  font-weight: bold;
  text-align: right;
}

.symbols {
  color: yellow;
  font-size: 3rem;
  line-height: 0;
  text-align: center;
}

@keyframes blink {
  from {
    background-color: white;
    color: var(--color);
  }

  to {
    background-color: var(--color);
    color: white;
  }
}

@keyframes colors-1 {
  0%,
  100% {
    color: white;
  }

  50% {
    color: var(--clr-1);
  }
}

@keyframes colors-2 {
  0%,
  100% {
    color: white;
  }

  33% {
    color: var(--clr-1);
  }

  66% {
    color: var(--clr-2);
  }
}

@keyframes colors-3 {
  0%,
  100% {
    color: white;
  }

  25% {
    color: var(--clr-1);
  }

  50% {
    color: var(--clr-2);
  }

  75% {
    color: var(--clr-3);
  }
}

@keyframes colors-4 {
  0%,
  100% {
    color: white;
  }

  20% {
    color: var(--clr-1);
  }

  40% {
    color: var(--clr-2);
  }

  60% {
    color: var(--clr-3);
  }

  80% {
    color: var(--clr-4);
  }
}

@keyframes fade-out {
  from {
    -webkit-clip-path: circle(100%);
    clip-path: circle(100%);
  }

  to {
    -webkit-clip-path: circle(0%);
    clip-path: circle(0%);
  }
}

@keyframes shrink-horizontal {
  from {
    -webkit-clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);
    clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);
  }

  to {
    -webkit-clip-path: polygon(0% 50%, 100% 50%, 100% 50%, 0% 50%);
    clip-path: polygon(0% 50%, 100% 50%, 100% 50%, 0% 50%);
  }
}

@keyframes shrink-vertical {
  from {
    -webkit-clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);
    clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);
  }

  to {
    -webkit-clip-path: polygon(50% 0%, 50% 0%, 50% 100%, 50% 100%);
    clip-path: polygon(50% 0%, 50% 0%, 50% 100%, 50% 100%);
  }
}

@keyframes flick {
  20%,
  25%,
  30%,
  35% {
    opacity: 1;
  }

  21%,
  24%,
  31%,
  34% {
    opacity: 0;
  }
}

@keyframes longpress {
  from {
    -webkit-clip-path: circle(0%);
    clip-path: circle(0%);
  }

  to {
    -webkit-clip-path: circle(100%);
    clip-path: circle(100%);
  }
}

@keyframes octocat-wave {
  0%,
  100% {
    transform: rotate(0);
  }

  20%,
  60% {
    transform: rotate(-25deg);
  }

  40%,
  80% {
    transform: rotate(10deg);
  }
}
