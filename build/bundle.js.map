{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../node_modules/svelte/store/index.mjs","../src/utils.js","../src/stores.js","../src/Card.svelte","../src/Board.svelte","../src/Energy.svelte","../src/Score.svelte","../src/App.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, callback) {\n    const unsub = store.subscribe(callback);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if (typeof $$scope.dirty === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.setAttribute('aria-hidden', 'true');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += \" \" + name + \"=\" + JSON.stringify(String(value)\n                .replace(/\"/g, '&#34;')\n                .replace(/'/g, '&#39;'));\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, value = ret) => {\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, detail));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, loop_guard, measure, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_store, xlink_attr };\n","import { safe_not_equal, noop, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => store.subscribe((value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","export const shuffleArray = array => {\n  for (let i = array.length - 1; i > 0; --i) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n};\n\nconst getRandr = prev => {\n  const a = 6364136223846793005n;\n  const c = 1442695040888963407n;\n  const m = 2n ** 64n;\n  return (a * BigInt(prev) + c) % m;\n};\n\nconst getRandrzInitial = seed => {\n  let count = 1n,\n    result = [getRandr(seed)];\n  while (count < 7n) {\n    result = [...result, getRandr(count * result[count - 1n])];\n    ++count;\n  }\n  return result;\n};\n\nconst createGetNewCardValue = seed => {\n  let randrz = getRandrzInitial(seed);\n  return column => {\n    if (column < 0 || 6 < column) return;\n    let result = randrz[column];\n    randrz[column] = getRandr(result);\n    return Number(result % 9n);\n  };\n};\n\nconst getNumberFromString = seed => {\n  seed = String(seed).match(/[0-9A-Za-z]/g);\n  if (!seed || !seed.length) return 0;\n  seed = seed.length > 192 ? seed.slice(0, 192) : seed;\n  return Number(parseInt(seed.join(\"\"), 36));\n};\n\nconst getNewCardValue = createGetNewCardValue(getNumberFromString(prompt(\"What seed is now?\")));\n\nexport const getFieldUndefined = () => {\n  const arr1 = Array(14).fill(undefined);\n  const arr2 = Array(14).fill(undefined);\n  const arr3 = Array(14).fill(undefined);\n  const arr4 = Array(14).fill(undefined);\n  const arr5 = Array(14).fill(undefined);\n  const arr6 = Array(14).fill(undefined);\n  const arr7 = Array(14).fill(undefined);\n  return [arr1, arr2, arr3, arr4, arr5, arr6, arr7];\n};\n\nexport const getFieldIndexes = cards => {\n  const field = getFieldUndefined();\n  cards.forEach((card, index) => (field[card.x][card.y] = index));\n  return field;\n};\n\nexport const getFieldRandom = () =>\n  Array(49)\n    .fill(undefined)\n    .map((_, index) => ({\n      x: Math.floor(index / 7),\n      y: index % 7,\n      value: getNewCardValue(Math.floor(index / 7)),\n      duration: 0\n    }));\n\nexport const getFieldPrepared = field => {\n  let matchedIndexes = 1;\n  while (matchedIndexes) {\n    matchedIndexes = getMatchedIndexes(field);\n    if (!matchedIndexes.length) return field;\n    field = getCardsFallen(getCardsMatched(field, matchedIndexes));\n  }\n};\n\nexport const getFieldInitial = () => getFieldPrepared(getFieldRandom());\n\nexport const getCardsFallen = cards => {\n  const result = [];\n  const field = getFieldIndexes(cards);\n  for (let x in field) {\n    let countY = 0;\n    for (let y in field[x]) {\n      const index = field[x][y];\n      if (index !== undefined) {\n        const card = cards[index];\n        result[index] = {\n          x: card.x,\n          y: y - countY,\n          value: card.value,\n          duration: (1 - (0.4 * countY) / 7) * countY * 75\n        };\n      } else ++countY;\n    }\n  }\n  return result;\n};\n\nexport const getMatchedIndexes = cards => {\n  const field = getFieldIndexes(cards);\n  let groupedArray = [];\n  let count = 0;\n  const group = index => {\n    const { value, x, y } = cards[index];\n    if (groupedArray[index]) return;\n    groupedArray[index] = { value, group: count };\n    let topIndex, rightIndex, bottomIndex, leftIndex;\n    if (y < 6) topIndex = field[x][y + 1];\n    if (x < 6) rightIndex = field[x + 1][y];\n    if (y > 0) bottomIndex = field[x][y - 1];\n    if (x > 0) leftIndex = field[x - 1][y];\n    const isSameValue = index => index && cards[index].value === value;\n    if (isSameValue(topIndex)) group(topIndex);\n    if (isSameValue(rightIndex)) group(rightIndex);\n    if (isSameValue(bottomIndex)) group(bottomIndex);\n    if (isSameValue(leftIndex)) group(leftIndex);\n  };\n  for (let index in cards) {\n    ++count;\n    group(index);\n  }\n  const groupedObject = groupedArray.reduce(\n    (result, { value, group }, index) => ({\n      ...result,\n      [group]: {\n        value,\n        indexes: [...(result[group] ? result[group].indexes : []), index]\n      }\n    }),\n    {}\n  );\n  return Object.keys(groupedObject).reduce((result, group) => {\n    const { value, indexes } = groupedObject[group];\n    return value === indexes.length ? [...result, ...indexes] : result;\n  }, []);\n};\n\nexport const getCardsMatched = (cards, matchedIndexes) => {\n  let counts = [0, 0, 0, 0, 0, 0, 0];\n  const getNewY = x => counts[x] + cards.filter(card => card.x === x).sort(({ y: y1 }, { y: y2 }) => y1 - y2)[6].y;\n  return cards.map((card, index) => {\n    if (matchedIndexes.includes(index) && card.y < 7) {\n      ++counts[card.x];\n      return {\n        x: card.x,\n        y: getNewY(card.x),\n        value: getNewCardValue(card.x),\n        duration: 0\n      };\n    } else return card;\n  });\n};\n\nexport const getCardsPlusOne = (cards, plusIndex) =>\n  cards.map((card, cardIndex) =>\n    plusIndex === cardIndex && card.y < 7\n      ? {\n          x: card.x,\n          y: card.y,\n          value: card.value < 9 ? card.value + 1 : 0,\n          duration: 0\n        }\n      : card\n  );\n","import { writable } from \"svelte/store\";\nimport { getFieldInitial } from \"./utils.js\";\n\nexport const score = writable(0);\n\nexport const hiScore = writable(0);\n\nexport const phase = writable(\"input\");\n\nexport const cards = writable(getFieldInitial());\n\nexport const energy = writable(100);\n\nexport const shake = writable(0);\n\nexport const sfx = writable(0);\n","<script>\n  export let index,\n    phase,\n    plused,\n    matched,\n    duration,\n    value,\n    x = 0,\n    y = 0;\n\n  $: nextValue = value < 9 ? value + 1 : 0;\n\n  $: style = `\n    transition: bottom ${phase === \"fall\" ? duration : 0}ms ease-in;\n    left: calc(${x} * var(--card-size));\n    bottom: calc(${y} * var(--card-size));\n  `;\n</script>\n\n<style>\n  .card {\n    box-shadow: var(--shadow-2);\n    height: var(--card-size);\n    position: absolute;\n    width: var(--card-size);\n  }\n  .card:hover {\n    box-shadow: var(--shadow-1);\n    cursor: pointer;\n    z-index: 2;\n  }\n  .current,\n  .next {\n    backface-visibility: hidden;\n    background-color: var(--color);\n    color: white;\n    font-size: var(--pixel-10);\n    height: var(--card-size);\n    line-height: var(--card-size);\n    position: absolute;\n    text-align: center;\n    width: var(--card-size);\n    z-index: 1;\n  }\n  .next {\n    transform: rotateY(-180deg);\n  }\n  .plused {\n    box-shadow: var(--shadow-1);\n    perspective: var(--game-width);\n    z-index: 2;\n  }\n  .plused .value {\n    transform-style: preserve-3d;\n    transform: rotateY(-180deg);\n    transition: transform 400ms ease;\n  }\n  .matched .current {\n    animation: blink 100ms infinite;\n  }\n  .value0 {\n    --color: gray;\n  }\n  .value1 {\n    --color: lawngreen;\n  }\n  .value2 {\n    --color: gold;\n  }\n  .value3 {\n    --color: darkorange;\n  }\n  .value4 {\n    --color: crimson;\n  }\n  .value5 {\n    --color: fuchsia;\n  }\n  .value6 {\n    --color: blueviolet;\n  }\n  .value7 {\n    --color: dodgerblue;\n  }\n  .value8 {\n    --color: turquoise;\n  }\n  .value9 {\n    --color: mediumseagreen;\n  }\n  @keyframes blink {\n    from {\n      background-color: white;\n      color: var(--color);\n    }\n    to {\n      background-color: var(--color);\n      color: white;\n    }\n  }\n</style>\n\n<div class=\"card\" class:plused class:matched {style} data-index={index}>\n  <div class=\"value\">\n    <div class=\"current value{value}\">{value}</div>\n    <div class=\"next value{nextValue}\">{nextValue}</div>\n  </div>\n</div>\n","<script>\n  import { cards, energy, phase } from \"./stores.js\";\n  import {\n    getCardsFallen,\n    getCardsMatched,\n    getCardsPlusOne,\n    getMatchedIndexes\n  } from \"./utils.js\";\n  import Card from \"./Card.svelte\";\n\n  let plusIndex;\n  let matchedIndexes = [];\n\n  phase.subscribe(value => {\n    switch (value) {\n      case \"plus\":\n        cards.set(getCardsPlusOne($cards, plusIndex));\n        phase.set(\"blink\");\n        break;\n      case \"blink\":\n        plusIndex = undefined;\n        matchedIndexes = getMatchedIndexes($cards);\n        if (matchedIndexes.length) {\n          window.setTimeout(() => phase.set(\"match\"), 400);\n        } else if ($energy < 10) {\n          phase.set(\"gameover\");\n        } else {\n          phase.set(\"input\");\n        }\n        break;\n      case \"match\":\n        const energyDiff = matchedIndexes.reduce(\n          (result, value) => result + $cards[value].value,\n          0\n        );\n        energy.set($energy + energyDiff);\n        cards.set(getCardsMatched($cards, matchedIndexes));\n        matchedIndexes = [];\n        window.setTimeout(() => phase.set(\"fall\"), 600);\n        break;\n      case \"fall\":\n        cards.set(getCardsFallen($cards));\n        window.setTimeout(() => phase.set(\"blink\"), 400);\n        break;\n      case \"gameover\":\n        alert(\"GAME OVER\");\n    }\n  });\n\n  const getTargetDataIndex = ({ dataset, parentNode }) => {\n    if (dataset && dataset.index) return dataset.index;\n    if (parentNode) return getTargetDataIndex(parentNode);\n  };\n</script>\n\n<style>\n  .board {\n    background: dimgray\n      url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"8\" height=\"8\" fill-opacity=\"0.5\"><rect x=\"4\" width=\"4\" height=\"4\" /><rect y=\"4\" width=\"4\" height=\"4\" /></svg>');\n    background-size: var(--pixel-4) var(--pixel-4);\n    border: var(--pixel) solid white;\n    box-sizing: border-box;\n    height: var(--game-width);\n    overflow: hidden;\n    position: relative;\n    width: var(--game-width);\n  }\n</style>\n\n<div\n  class=\"board\"\n  on:click={({ target }) => {\n    if ($phase !== 'input' || plusIndex) return;\n    plusIndex = Number(getTargetDataIndex(target));\n    if (typeof plusIndex === 'number') {\n      energy.set($energy - 10);\n      window.setTimeout(() => phase.set('plus'), 400);\n    }\n  }}>\n  {#each $cards as card, index}\n    <Card\n      phase={$phase}\n      plused={plusIndex === index}\n      matched={matchedIndexes.includes(index)}\n      {...card}\n      {index} />\n  {/each}\n</div>\n","<script>\n  import { energy } from \"./stores.js\";\n\n  const getBarWidth = value => {\n    if (value > 100) return 100;\n    if (value < 0) return 0;\n    return value;\n  };\n</script>\n\n<style>\n  .energy {\n    background-color: darkslategray;\n    flex-basis: var(--pixel-9);\n    overflow: hidden;\n  }\n  .bar {\n    align-items: center;\n    background-color: white;\n    display: flex;\n    height: 100%;\n    justify-content: flex-end;\n    transition: width 200ms ease-in;\n  }\n  .value {\n    font-size: var(--pixel-7);\n    line-height: 1;\n  }\n</style>\n\n<div class=\"energy\">\n  <div class=\"bar\" style={`width: ${getBarWidth($energy)}%`}>\n    <span class=\"value\">{$energy}</span>\n  </div>\n</div>\n","<script>\n  import { score } from \"./stores.js\";\n</script>\n\n<style>\n  .score {\n    font-size: var(--pixel-7);\n    line-height: 1;\n    text-align: right;\n  }\n</style>\n\n<span class=\"score\">{$score}</span>\n","<script>\n  import { phase, energy } from \"./stores.js\";\n  import { shuffleArray } from \"./utils.js\";\n  import Game from \"./Game.svelte\";\n\n  const [a, b, c, d] = shuffleArray([\n    7,\n    11,\n    13,\n    17,\n    19,\n    23,\n    29,\n    31,\n    37,\n    41,\n    43,\n    47,\n    53,\n    59,\n    61,\n    67,\n    71,\n    73,\n    79,\n    83,\n    89,\n    97\n  ]);\n\n  const style = `\n    background-image:\n      linear-gradient(90deg, hsla(${Math.random() * 255},100%,50%,.05) 50%, transparent 50%),\n      linear-gradient(90deg, hsla(${Math.random() * 255},100%,50%,.05) 50%, transparent 50%),\n      linear-gradient(90deg, transparent 50%, hsla(${Math.random() * 255},100%,50%,.05) 50%),\n      linear-gradient(90deg, transparent 50%, hsla(${Math.random() * 255},100%,50%,.05) 50%);\n    background-size:\n      calc(${a} * var(--pixel)),\n      calc(${b} * var(--pixel)),\n      calc(${c} * var(--pixel)),\n      calc(${d} * var(--pixel));\n  `;\n</script>\n\n<svelte:window\n  on:keypress={({ key }) => {\n    if (key === '1') energy.set(10);\n    if (key === '0') energy.set(100);\n  }} />\n\n<div {style}>\n  <span style=\"color: white; position: absolute\">{$phase}</span>\n  <Game />\n</div>\n","import App from \"./App.svelte\";\n\nvar app = new App({\n  target: document.body\n});\n\nexport default app;\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","unsub","subscribe","unsubscribe","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","set_style","key","important","style","setProperty","toggle_class","toggle","classList","current_component","set_current_component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flush","seen_callbacks","Set","length","shift","update","pop","i","has","add","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","d","create_component","mount_component","on_mount","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","callbacks","ready","ret","hydrate","l","Array","from","childNodes","children","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","getRandr","prev","BigInt","getNewCardValue","seed","randrz","count","result","getRandrzInitial","column","Number","createGetNewCardValue","prompt","String","match","slice","parseInt","join","getFieldIndexes","cards","field","undefined","card","x","y","getCardsFallen","countY","duration","getMatchedIndexes","groupedArray","group","topIndex","rightIndex","bottomIndex","leftIndex","isSameValue","groupedObject","reduce","indexes","keys","getCardsMatched","matchedIndexes","counts","includes","sort","y1","y2","score","phase","getFieldPrepared","_","Math","floor","energy","plused","matched","nextValue","levels","updates","to_null_out","accounted_for","$$scope","n","spread_props","r","iterations","plusIndex","cardIndex","getCardsPlusOne","$cards","window","setTimeout","$energy","energyDiff","alert","getTargetDataIndex","dataset","$phase","array","j","random","shuffleArray","body"],"mappings":"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"}