{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../node_modules/svelte/store/index.mjs","../src/utils.js","../src/stores.js","../src/Card.svelte","../src/Board.svelte","../src/Energy.svelte","../src/Score.svelte","../src/Log.svelte","../src/Game.svelte","../src/GameOver.svelte","../src/Menu.svelte","../src/App.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.24.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","const getRandr = (prev = 0) => (prev * 16807 + 19487171) % 2147483647;\n\nconst getRandrzInitial = (seed) => {\n  let count = 1,\n    result = [getRandr(seed)];\n  while (count < 6) result = result.concat(getRandr(++count * result[0]));\n  return result;\n};\n\nconst createGetNewCardValue = (seed) => {\n  let randrz = getRandrzInitial(seed);\n  return (column) => {\n    if (column < 0 || 5 < column) return;\n    let result = randrz[column];\n    randrz[column] = getRandr(result);\n    return Number(result % 10);\n  };\n};\n\nconst getNumberFromString = (seed) => {\n  seed = String(seed).match(/[0-9A-Za-z]/g);\n  if (!seed) return 0;\n  seed = seed.length > 192 ? seed.slice(0, 192) : seed;\n  return Number(parseInt(seed.join(\"\"), 36));\n};\n\nconst getNewCardValue = createGetNewCardValue(getNumberFromString(Date.now()));\n\nexport const getFieldUndefined = () => {\n  const arr0 = Array(12).fill();\n  const arr1 = Array(12).fill();\n  const arr2 = Array(12).fill();\n  const arr3 = Array(12).fill();\n  const arr4 = Array(12).fill();\n  const arr5 = Array(12).fill();\n  return [arr0, arr1, arr2, arr3, arr4, arr5];\n};\n\nexport const getFieldIndexes = (cards) => {\n  const field = getFieldUndefined();\n  cards.forEach((card, index) => (field[card.x][card.y] = index));\n  return field;\n};\n\nexport const getFieldRandom = () =>\n  Array(36)\n    .fill(undefined)\n    .map((_, index) => ({\n      x: Math.floor(index / 6),\n      y: index % 6,\n      value: getNewCardValue(Math.floor(index / 6)),\n      duration: 0,\n    }));\n\nexport const getFieldPrepared = (field) => {\n  let matchedIndexes = 1;\n  while (matchedIndexes) {\n    matchedIndexes = getMatchedIndexes(field);\n    if (matchedIndexes.length === 0) return field;\n    field = getCardsFallen(getCardsMatched(field, matchedIndexes));\n  }\n};\n\nexport const getFieldInitial = () => getFieldPrepared(getFieldRandom());\n\nexport const getCardsFallen = (cards) => {\n  const result = [];\n  const field = getFieldIndexes(cards);\n  for (let x in field) {\n    let count = 0;\n    for (let y in field[x]) {\n      const index = field[x][y];\n      if (index !== undefined) {\n        const card = cards[index];\n        result[index] = {\n          x: card.x,\n          y: y - count,\n          value: card.value,\n          duration: 100 * Math.sqrt(2 * count),\n        };\n      } else ++count;\n    }\n  }\n  return result;\n};\n\nexport const getMatchedIndexes = (cards) => {\n  const field = getFieldIndexes(cards);\n  let groupedArray = [];\n  let count = 0;\n  const group = (index) => {\n    const { value, x, y } = cards[index];\n    if (groupedArray[index]) return;\n    groupedArray[index] = { value, group: count };\n    let topIndex, rightIndex, bottomIndex, leftIndex;\n    if (y < 5) topIndex = field[x][y + 1];\n    if (x < 5) rightIndex = field[x + 1][y];\n    if (y > 0) bottomIndex = field[x][y - 1];\n    if (x > 0) leftIndex = field[x - 1][y];\n    const isSameValue = (index) => index && cards[index].value === value;\n    if (isSameValue(topIndex)) group(topIndex);\n    if (isSameValue(rightIndex)) group(rightIndex);\n    if (isSameValue(bottomIndex)) group(bottomIndex);\n    if (isSameValue(leftIndex)) group(leftIndex);\n  };\n  for (let index in cards) {\n    ++count;\n    group(index);\n  }\n  const groupedObject = groupedArray.reduce(\n    (result, { value, group }, index) => ({\n      ...result,\n      [group]: {\n        value,\n        indexes: [...(result[group] ? result[group].indexes : []), index],\n      },\n    }),\n    {}\n  );\n  return Object.keys(groupedObject).reduce((result, group) => {\n    const { value, indexes } = groupedObject[group];\n    return value === indexes.length ? [...result, ...indexes] : result;\n  }, []);\n};\n\nexport const getCardsMatched = (cards, matchedIndexes) => {\n  const counts = [0, 0, 0, 0, 0, 0];\n  const getNewY = (x) =>\n    counts[x] +\n    cards\n      .filter((card) => card.x === x)\n      .sort(({ y: y1 }, { y: y2 }) => y1 - y2)[5].y;\n  return cards.map((card, index) => {\n    if (matchedIndexes.includes(index) && card.y < 6) {\n      ++counts[card.x];\n      return {\n        x: card.x,\n        y: getNewY(card.x),\n        value: getNewCardValue(card.x),\n        duration: 0,\n      };\n    } else return card;\n  });\n};\n\nexport const getCardsPlusOne = (cards, plusIndex) =>\n  cards.map((card, cardIndex) =>\n    plusIndex === cardIndex && card.y < 6\n      ? {\n          x: card.x,\n          y: card.y,\n          value: card.value < 9 ? card.value + 1 : 0,\n          duration: 0,\n        }\n      : card\n  );\n\nexport const getDiffFromBuffer = (buffer) => {\n  const { abs, sign, sqrt, trunc } = Math;\n  return sign(buffer) * trunc(sqrt(abs(buffer)));\n};\n\nexport const getTimeFromDiff = (diff) => {\n  switch (Math.abs(diff)) {\n    case 0:\n      return 200;\n    case 1:\n      return 130;\n    case 2:\n    case 3:\n      return 80;\n    case 4:\n    case 5:\n    case 6:\n      return 50;\n    case 7:\n    case 8:\n    case 9:\n    case 10:\n    case 11:\n      return 30;\n    default:\n      return 20;\n  }\n};\n\nexport const arrayToBase64 = (arr) => btoa(String.fromCodePoint(...arr));\n\nexport const base64ToArray = (str) =>\n  [...atob(str)].map((chr) => chr.charCodeAt());\n\nexport const shuffleArray = (array) => {\n  for (let i = array.length - 1; i > 0; --i) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n};\n\nexport const getRandomColor = (lightness = 10) =>\n  `hsl(${Math.floor(Math.random() * 360)},100%,${lightness}%)`;\n\nexport const getNewAppStyle = () => {\n  const [a, b, c, d] = shuffleArray([\n    7,\n    11,\n    13,\n    17,\n    19,\n    23,\n    29,\n    31,\n    37,\n    41,\n    43,\n    47,\n    53,\n    59,\n    61,\n    67,\n    71,\n    73,\n    79,\n    83,\n    89,\n    97,\n  ]);\n  return `\n      background-color: ${getRandomColor()};\n      background-image:\n        linear-gradient(90deg, ${getRandomColor()} 50%, transparent 50%),\n        linear-gradient(90deg, ${getRandomColor()} 50%, transparent 50%),\n        linear-gradient(90deg, transparent 50%, ${getRandomColor()} 50%),\n        linear-gradient(90deg, transparent 50%, ${getRandomColor()} 50%);\n      background-position: center;\n      background-size: ${a}rem, ${b}rem, ${c}rem, ${d}rem;`;\n};\n\nexport const setShadow = (on = true) => {\n  const { style } = document.documentElement;\n  const none = \"none\";\n  const transparent = \"0 0 0 transparent\";\n  const shadow0 = \"0 0 1px black\";\n  const shadow1 =\n    \"0 0.5rem 0.5rem var(--color-black-04), 0 -1px 0 var(--color-white-06)\";\n  const shadow2 =\n    \"0 1rem 1rem var(--color-black-04),  0 -1px 0 var(--color-white-06)\";\n  const shadow21 = \"0 0 21rem 1rem black\";\n  const shadowInset1 =\n    \"inset 0 0.5rem 0.5rem var(--color-black-04), 0 1px 0 var(--color-white-06)\";\n  const shadowInset2 =\n    \"inset 0 1rem 1rem var(--color-black-04), 0 1px 0 var(--color-white-06)\";\n  style.setProperty(\"--shadow-0\", on ? shadow0 : none);\n  style.setProperty(\"--shadow-1\", on ? shadow1 : none);\n  style.setProperty(\"--shadow-2\", on ? shadow2 : none);\n  style.setProperty(\"--shadow-21\", on ? shadow21 : transparent);\n  style.setProperty(\"--shadow-inset-1\", on ? shadowInset1 : none);\n  style.setProperty(\"--shadow-inset-2\", on ? shadowInset2 : none);\n};\n","import { writable } from \"svelte/store\";\nimport { getFieldInitial } from \"./utils.js\";\n\nconst energyInit = { buffer: 0, value: 100 };\nconst logInit = [];\nconst phaseInit = \"idle\";\nconst randomColorInit = \"white\";\nconst scoreInit = { buffer: 0, value: 0 };\n\nexport const cards = writable(getFieldInitial());\nexport const energy = writable(energyInit);\nexport const log = writable(logInit);\nexport const options = writable({ shadow: true });\nexport const overlay = writable(true);\nexport const phase = writable(phaseInit);\nexport const randomColor = writable(randomColorInit);\nexport const score = writable(scoreInit);\nexport const sfx = writable(0);\nexport const shake = writable(0);\n\nexport const initGame = () => {\n  cards.set(getFieldInitial());\n  energy.set(energyInit);\n  log.set(logInit);\n  overlay.set(false);\n  phase.set(\"idle\");\n  randomColor.set(randomColorInit);\n  score.set(scoreInit);\n};\n","<script>\n  export let index,\n    clickable,\n    duration,\n    fallPhase,\n    matched,\n    plused,\n    value,\n    x = 0,\n    y = 0;\n\n  $: nextValue = value < 9 ? value + 1 : 0;\n\n  $: style = `\n    bottom: ${y * 21}rem;\n    left: ${x * 21}rem;\n    transition-duration: ${fallPhase ? duration : 0}ms;\n  `;\n</script>\n\n<style>\n  .card {\n    box-shadow: var(--shadow-2);\n    cursor: progress;\n    height: 21rem;\n    letter-spacing: 0;\n    position: absolute;\n    transition-property: bottom;\n    transition-timing-function: cubic-bezier(0.56, 0, 1, 1);\n    width: 21rem;\n    will-change: bottom;\n  }\n  .current,\n  .next {\n    backface-visibility: hidden;\n    -webkit-backface-visibility: hidden;\n    background-color: var(--color);\n    box-shadow: var(--shadow-0);\n    color: white;\n    font-size: 13rem;\n    height: 21rem;\n    line-height: 21rem;\n    position: absolute;\n    text-align: center;\n    width: 21rem;\n    z-index: 1;\n  }\n  .current {\n    box-sizing: content-box;\n    clip-path: circle(100%);\n    -webkit-clip-path: circle(100%);\n    will-change: clip-path;\n  }\n  .next {\n    transform: rotateY(-180deg);\n  }\n  .plused {\n    box-shadow: none;\n    perspective: 128rem;\n    z-index: 2;\n  }\n  .plused .value {\n    transform-style: preserve-3d;\n    transform: rotateY(-180deg);\n    transition: transform 400ms ease;\n  }\n  .plused .current,\n  .plused .next {\n    box-shadow: var(--shadow-1);\n  }\n  .matched {\n    box-shadow: none;\n  }\n  .matched .current {\n    animation: blink 200ms steps(2, end) 2, fade-out 400ms ease 400ms forwards;\n    box-shadow: none;\n  }\n  @media (hover: hover) and (pointer: fine) {\n    .clickable:hover {\n      box-shadow: none;\n      cursor: pointer;\n      z-index: 2;\n    }\n    .clickable:hover .current,\n    .clickable:hover .next {\n      border-bottom: 1px solid var(--color);\n      box-shadow: var(--shadow-1);\n      top: -1px;\n    }\n    .clickable:active .current {\n      top: 0;\n    }\n  }\n  @keyframes blink {\n    from {\n      background-color: white;\n      color: var(--color);\n    }\n    to {\n      background-color: var(--color);\n      color: white;\n    }\n  }\n  @keyframes fade-out {\n    from {\n      clip-path: circle(100%);\n      -webkit-clip-path: circle(100%);\n    }\n    to {\n      clip-path: circle(0);\n      -webkit-clip-path: circle(0);\n    }\n  }\n</style>\n\n<div\n  class=\"card\"\n  class:clickable\n  class:plused\n  class:matched\n  {style}\n  data-index={index}>\n  <div class=\"value\">\n    <div class=\"current color-{value}\">{value}</div>\n    <div class=\"next color-{nextValue}\">{nextValue}</div>\n  </div>\n</div>\n","<script>\n  import { cards, energy, log, overlay, phase, score } from \"./stores.js\";\n  import {\n    getCardsFallen,\n    getCardsMatched,\n    getCardsPlusOne,\n    getMatchedIndexes,\n  } from \"./utils.js\";\n  import Card from \"./Card.svelte\";\n\n  let plusIndex;\n  let matchedIndexes = [];\n\n  phase.subscribe(() => {\n    switch ($phase) {\n      case \"plus\":\n        $cards = getCardsPlusOne($cards, plusIndex);\n        $phase = \"blink\";\n        break;\n      case \"blink\":\n        plusIndex = undefined;\n        matchedIndexes = getMatchedIndexes($cards);\n        if (matchedIndexes.length > 0) {\n          $log = $log.concat(\n            matchedIndexes.reduce((result, index) => {\n              const { value } = $cards[index];\n              result[value] = (result[value] || 0) + value;\n              result.sum = (result.sum || 0) + value;\n              return result;\n            }, {})\n          );\n          const buffer = matchedIndexes.reduce(\n            (result, index) => result + $cards[index].value,\n            0\n          );\n          setTimeout(() => ($energy = { ...$energy, buffer }), 400);\n          setTimeout(() => ($phase = \"match\"), 800);\n        } else if ($energy.value > 100) {\n          $phase = \"extra\";\n        } else if ($energy.value < 10) {\n          $phase = \"gameover\";\n        } else if ($log.length > 0) {\n          $phase = \"total\";\n        } else {\n          $phase = \"idle\";\n        }\n        break;\n      case \"match\":\n        $cards = getCardsMatched($cards, matchedIndexes);\n        matchedIndexes = [];\n        setTimeout(() => ($phase = \"fall\"), 400);\n        break;\n      case \"fall\":\n        $cards = getCardsFallen($cards);\n        setTimeout(() => ($phase = \"blink\"), 400);\n        break;\n      case \"extra\":\n        $log = $log.concat({ extra: 0 });\n        $energy = { ...$energy, buffer: 100 - $energy.value };\n        break;\n      case \"total\":\n        $score = {\n          ...$score,\n          buffer: $log.reduce(\n            (result, { extra, sum }, index) =>\n              result + (index + 1) * (sum || extra),\n            0\n          ),\n        };\n        setTimeout(() => {\n          $phase = \"score\";\n          $score = { ...$score };\n        }, 1000);\n        break;\n      case \"score\":\n        break;\n      case \"gameover\":\n        $overlay = true;\n        break;\n    }\n  });\n\n  const getTargetDataIndex = ({ dataset, parentNode }) => {\n    if (dataset && dataset.index) return dataset.index;\n    if (parentNode) return getTargetDataIndex(parentNode);\n  };\n\n  const boardClick = ({ target }) => {\n    if ($phase !== \"idle\" || plusIndex) return;\n    plusIndex = Number(getTargetDataIndex(target));\n    if (!Number.isNaN(plusIndex)) {\n      $energy = { ...$energy, buffer: -10 };\n      setTimeout(() => ($phase = \"plus\"), 400);\n    }\n  };\n</script>\n\n<style>\n  .board {\n    background-color: var(--color-board);\n    background-image: url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"8\" height=\"8\" fill-opacity=\".6\"><rect x=\"4\" width=\"4\" height=\"4\" /><rect y=\"4\" width=\"4\" height=\"4\" /></svg>');\n    background-size: 6rem 6rem;\n    border: 1rem solid var(--color-dark);\n    filter: drop-shadow(var(--shadow-inset-2));\n    height: 128rem;\n    position: relative;\n    width: 128rem;\n  }\n</style>\n\n<div\n  class=\"board\"\n  class:overflow-hidden={$phase !== 'idle'}\n  on:click={boardClick}>\n  {#each $cards as card, index}\n    <Card\n      clickable={$phase === 'idle' && !plusIndex}\n      fallPhase={$phase === 'fall'}\n      matched={matchedIndexes.includes(index)}\n      plused={plusIndex === index}\n      {...card}\n      {index} />\n  {/each}\n</div>\n","<script>\n  import { energy, log, phase, randomColor } from \"./stores.js\";\n  import { getDiffFromBuffer } from \"./utils.js\";\n\n  const updateRandomColor = () => {\n    if ($energy.value > 100 || $phase !== \"score\") {\n      $randomColor = `hsl(${Math.floor(360 * Math.random())}, 100%, 50%)`;\n      requestAnimationFrame(updateRandomColor);\n    } else {\n      $randomColor = \"white\";\n    }\n  };\n\n  energy.subscribe(({ buffer, value }) => {\n    if ($randomColor === \"white\") updateRandomColor();\n    const diff = getDiffFromBuffer(buffer);\n    requestAnimationFrame(() => {\n      if (diff === 0) return;\n      $energy = {\n        buffer: buffer - diff,\n        value: value + diff,\n      };\n    });\n    if ($phase === \"extra\") {\n      if (diff === 0) return setTimeout(() => ($phase = \"total\"), 800);\n      const [{ extra }] = $log.slice(-1);\n      $log = $log.slice(0, -1).concat({ extra: extra - diff });\n    }\n  });\n\n  $: value = $energy.value;\n  $: isExtra = value > 100;\n  $: leftBarStyle = `flex: ${(isExtra ? 200 - value : value) / 100}; z-index: ${\n    isExtra ? 0 : 1\n  }`;\n  $: leftValueStyle = `position: ${isExtra ? \"absolute\" : \"relative\"}`;\n  $: rightBarStyle = `background-color: ${\n    isExtra ? $randomColor : \"var(--color-dark)\"\n  }; flex: ${isExtra ? (value - 100) / 100 : 0}; z-index: ${isExtra ? 1 : 0}`;\n  $: rightValueStyle = `left: ${\n    isExtra ? `calc(${value > 119 ? 0 : (value - 120) / 100} * 128rem)` : 0\n  }; position: ${isExtra ? \"relative\" : \"absolute\"}`;\n</script>\n\n<style>\n  .energy {\n    background-color: var(--color-dark);\n    box-shadow: var(--shadow-inset-1);\n    display: flex;\n    font-size: 7rem;\n    position: relative;\n    width: 100%;\n  }\n  .left-bar,\n  .right-bar {\n    box-shadow: var(--shadow-1);\n    padding: 1rem 0;\n    overflow: hidden;\n  }\n  .left-bar {\n    background-color: white;\n    text-align: right;\n  }\n  .left-value {\n    color: var(--color-dark);\n    right: 0;\n  }\n  .right-value {\n    color: white;\n  }\n</style>\n\n<div class=\"energy\">\n  <div class=\"left-bar\" style={leftBarStyle}>\n    <span class=\"left-value\" style={leftValueStyle}>{$energy.value}</span>\n  </div>\n  <div class=\"right-bar\" style={rightBarStyle}>\n    <span class=\"right-value\" style={rightValueStyle}>{$energy.value}</span>\n  </div>\n</div>\n","<script>\n  import { log, phase, score } from \"./stores.js\";\n  import { getDiffFromBuffer, getTimeFromDiff } from \"./utils.js\";\n\n  score.subscribe(({ buffer, value }) => {\n    if ($phase !== \"score\") return;\n    const diff = getDiffFromBuffer(buffer);\n    const ms = getTimeFromDiff(diff);\n    setTimeout(() => {\n      if ($phase !== \"score\") return;\n      if (diff === 0) {\n        $log = [];\n        $phase = \"idle\";\n        return;\n      }\n      $score = {\n        buffer: buffer - diff,\n        value: value + diff,\n      };\n    }, ms);\n  });\n</script>\n\n<span class=\"score\">{$score.value}</span>\n","<script>\n  import { log, phase, randomColor, score } from \"./stores.js\";\n</script>\n\n<style>\n  .log {\n    align-items: flex-start;\n    color: white;\n    counter-reset: num;\n    display: flex;\n    flex-direction: column;\n    font-size: 5rem;\n    height: 100%;\n    justify-content: flex-end;\n    left: 0;\n    letter-spacing: 1rem;\n    line-height: 7rem;\n    list-style-type: none;\n    margin: 0;\n    overflow: hidden;\n    padding: 1rem 4rem;\n    position: absolute;\n    text-indent: 1rem;\n    text-shadow: var(--shadow-1);\n    top: 0;\n    width: 100%;\n  }\n  .log li {\n    display: flex;\n  }\n  .log .combo::before {\n    content: counter(num) \"[\";\n    counter-increment: num;\n  }\n  .log .combo::after {\n    content: \"]=\";\n  }\n  .log .value {\n    color: var(--color);\n  }\n  .log .sum {\n    position: absolute;\n    right: 4rem;\n  }\n</style>\n\n{#if $log.length > 0}\n  <ol class=\"log\">\n    {#if $phase !== 'score'}\n      {#each $log as { extra, sum, ...combo }, index1}\n        <li class=\"combo\">\n          {#each Object.entries(combo) as [key, value], index2}\n            <span class=\"value color-{key}\">{value}</span>\n            {#if index2 < Object.keys(combo).length - 1}\n              <span class=\"plus\">+</span>\n            {/if}\n          {/each}\n          {#if extra !== undefined}\n            <span class=\"extra\" style={`color: ${$randomColor}`}>{extra}</span>\n            <span class=\"sum\" style={`color: ${$randomColor}`}>\n              {(index1 + 1) * extra}\n            </span>\n          {:else}\n            <span class=\"sum\">{(index1 + 1) * sum}</span>\n          {/if}\n        </li>\n      {/each}\n    {/if}\n    {#if $phase === 'total' || $phase === 'score'}\n      <li>\n        <span>total:</span>\n        <span class=\"sum\">\n          {`${$phase === 'score' && $score.buffer > 0 ? '+' : ''}${$score.buffer}`}\n        </span>\n      </li>\n    {/if}\n  </ol>\n{/if}\n","<script>\n  import { log, overlay } from \"./stores.js\";\n  import Board from \"./Board.svelte\";\n  import Energy from \"./Energy.svelte\";\n  import Score from \"./Score.svelte\";\n  import Log from \"./Log.svelte\";\n\n  const openOverlay = () => ($overlay = true);\n</script>\n\n<style>\n  .game {\n    background-color: var(--color-base);\n    box-shadow: -1rem 0 0 0 var(--color-base), 1rem 0 0 0 var(--color-base),\n      var(--shadow-21);\n    overflow: hidden;\n  }\n  .digifall,\n  .digifall:focus,\n  .digifall:hover {\n    background-color: var(--color-dark);\n    border: none;\n    box-shadow: var(--shadow-inset-1);\n    color: var(--color-zero);\n    flex-grow: 1;\n    outline: none;\n    position: relative;\n    text-shadow: var(--shadow-1);\n    transition: all 400ms;\n    width: 100%;\n  }\n  .digifall:active,\n  .screen,\n  .screen:focus,\n  .screen:hover {\n    background-color: var(--color-dark);\n    color: var(--color-dark);\n    text-shadow: var(--shadow-0);\n  }\n</style>\n\n<div class=\"game content\" class:blur={$overlay === true}>\n  <div class=\"section-1\">\n    <button\n      class=\"digifall\"\n      class:screen={$log.length > 0}\n      on:click={openOverlay}>\n      <span>work in progress</span>\n      <Log />\n    </button>\n  </div>\n  <div class=\"section-2\">\n    <Score />\n  </div>\n  <div class=\"section-3\">\n    <Board />\n  </div>\n  <div class=\"section-4\">\n    <Energy />\n  </div>\n</div>\n","<script>\n  import { initGame, score } from \"./stores.js\";\n\n  const newGameClick = () => initGame();\n</script>\n\n<div class=\"game-over content\">\n  <div class=\"section-1\">\n    <span class=\"text-big\">game over</span>\n  </div>\n  <div class=\"section-2\">\n    <span class=\"score\">{$score.value}</span>\n  </div>\n  <div class=\"section-3\">\n    <button on:click={newGameClick}>new game</button>\n  </div>\n  <div class=\"section-4\">\n    <span class=\"text-wrapper\">\n      <span class=\"text-big\">0</span>\n      <span class=\"text-small\">ut of energy</span>\n    </span>\n  </div>\n</div>\n","<script>\n  import { initGame, options, overlay, score } from \"./stores.js\";\n  import { setShadow } from \"./utils.js\";\n  import Score from \"./Score.svelte\";\n\n  const resumeClick = () => ($overlay = false);\n\n  const newGameClick = () => initGame();\n\n  const shadowClick = () => {\n    const { shadow } = $options;\n    setShadow(!shadow);\n    $options = { ...$options, shadow: !shadow };\n  };\n\n  const fullscreenClick = () => {\n    const { documentElement, fullscreen } = document;\n    if (fullscreen) {\n      document.exitFullscreen();\n    } else {\n      documentElement.requestFullscreen();\n    }\n  };\n</script>\n\n<div class=\"menu content\">\n  <div class=\"section-1\">\n    <span class=\"text-small\">work in progress</span>\n  </div>\n  <div class=\"section-2\">\n    <span class=\"score\">{$score.value}</span>\n  </div>\n  <div class=\"section-3\">\n    <button on:click={resumeClick}>resume</button>\n    <button on:click={newGameClick}>new game</button>\n    <button on:click={shadowClick}>shadow</button>\n    <button on:click={fullscreenClick}>fullscreen</button>\n  </div>\n  <div class=\"section-4\" />\n</div>\n","<script>\n  import { onMount } from \"svelte\";\n  import { energy, overlay, phase } from \"./stores.js\";\n  import { getNewAppStyle, setShadow } from \"./utils.js\";\n  import Game from \"./Game.svelte\";\n  import GameOver from \"./GameOver.svelte\";\n  import Menu from \"./Menu.svelte\";\n  import Overlay from \"./Overlay.svelte\";\n\n  let appStyle = getNewAppStyle();\n\n  const updateAppStyle = () => {\n    const { style } = document.documentElement;\n    const { offsetHeight, offsetWidth } = document.querySelector(\".app\");\n    if (offsetHeight / offsetWidth > 1.5) {\n      style.setProperty(\"--pixel\", `${offsetWidth / 128}px`);\n      appStyle = undefined;\n    } else {\n      style.setProperty(\"--pixel\", `${offsetHeight / 192}px`);\n      appStyle = getNewAppStyle();\n    }\n  };\n\n  onMount(() => {\n    updateAppStyle();\n    setShadow();\n  });\n\n  onresize = updateAppStyle;\n\n  // DELME\n  onkeydown = ({ key }) => {\n    if (key === \"1\") $energy = { buffer: 0, value: 10 };\n    else if (key === \"0\") $energy = { buffer: 0, value: 100 };\n    else if (key === \"ArrowRight\") $energy = { ...$energy, buffer: 1 };\n    else if (key === \"ArrowLeft\") $energy = { ...$energy, buffer: -1 };\n  };\n</script>\n\n<style>\n  .app {\n    height: 100%;\n  }\n</style>\n\n<div class=\"app\" style={appStyle}>\n  <Game />\n  {#if $overlay}\n    <Overlay>\n      {#if $phase === 'gameover'}\n        <GameOver />\n      {:else}\n        <Menu />\n      {/if}\n    </Overlay>\n  {/if}\n</div>\n","import App from \"./App.svelte\";\r\n\r\nvar app = new App({\r\n  target: document.body,\r\n});\r\n\r\nexport default app;\r\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","get_slot_context","definition","ctx","$$scope","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","set_store_value","ret","value","set","has_prop","obj","prop","prototype","hasOwnProperty","call","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","wholeText","toggle_class","toggle","classList","current_component","set_current_component","onMount","Error","get_current_component","on_mount","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","skip_bound","ready","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","$$props","$$set","keys","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","getRandr","prev","getNewCardValue","seed","randrz","count","result","concat","getRandrzInitial","column","Number","createGetNewCardValue","Date","now","String","match","parseInt","join","getFieldIndexes","cards","field","card","x","y","getFieldInitial","matchedIndexes","getMatchedIndexes","getCardsFallen","getCardsMatched","getFieldPrepared","_","floor","duration","sqrt","groupedArray","group","topIndex","rightIndex","bottomIndex","leftIndex","isSameValue","groupedObject","reduce","indexes","counts","includes","sort","y1","y2","getDiffFromBuffer","buffer","abs","sign","trunc","getRandomColor","lightness","random","getNewAppStyle","array","j","shuffleArray","setShadow","on","style","documentElement","setProperty","energyInit","logInit","scoreInit","energy","log","shadow","overlay","phase","randomColor","score","initGame","clickable","fallPhase","matched","plused","nextValue","levels","updates","to_null_out","accounted_for","n","key","spread_props","plusIndex","$phase","$cards","cardIndex","getCardsPlusOne","$log","sum","setTimeout","$energy","extra","$score","$overlay","getTargetDataIndex","dataset","isNaN","updateRandomColor","$randomColor","requestAnimationFrame","diff","isExtra","leftBarStyle","leftValueStyle","rightBarStyle","rightValueStyle","ms","getTimeFromDiff","exclude","entries","$options","fullscreen","exitFullscreen","requestFullscreen","slot_ctx","appStyle","updateAppStyle","offsetHeight","offsetWidth","querySelector","onresize","onkeydown","body"],"mappings":"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"}