{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../node_modules/svelte/store/index.mjs","../src/utils.js","../src/stores.js","../src/Card.svelte","../src/Board.svelte","../src/Energy.svelte","../src/Score.svelte","../src/Game.svelte","../src/App.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if (typeof $$scope.dirty === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j];\n                if (attributes[attribute.name]) {\n                    j++;\n                }\n                else {\n                    node.removeAttribute(attribute.name);\n                }\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.setAttribute('aria-hidden', 'true');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nconst seen_callbacks = new Set();\nfunction flush() {\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.18.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_each_keys, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","const getRandr = prev => {\r\n  const a = 6364136223846793005n;\r\n  const c = 1442695040888963407n;\r\n  const m = 2n ** 64n;\r\n  return (a * BigInt(prev) + c) % m;\r\n};\r\n\r\nconst getRandrzInitial = seed => {\r\n  let count = 1n,\r\n    result = [getRandr(seed)];\r\n  while (count < 6n) result = [...result, getRandr(++count * result[0])];\r\n  return result;\r\n};\r\n\r\nconst createGetNewCardValue = seed => {\r\n  let randrz = getRandrzInitial(seed);\r\n  return column => {\r\n    if (column < 0 || 5 < column) return;\r\n    let result = randrz[column];\r\n    randrz[column] = getRandr(result);\r\n    return Number(result % 10n);\r\n  };\r\n};\r\n\r\nconst getNumberFromString = seed => {\r\n  seed = String(seed).match(/[0-9A-Za-z]/g);\r\n  if (!seed) return 0;\r\n  seed = seed.length > 192 ? seed.slice(0, 192) : seed;\r\n  return Number(parseInt(seed.join(\"\"), 36));\r\n};\r\n\r\nconst getNewCardValue = createGetNewCardValue(getNumberFromString(prompt(\"What seed is now?\", Date.now())));\r\n\r\nexport const getFieldUndefined = () => {\r\n  const arr0 = Array(12).fill();\r\n  const arr1 = Array(12).fill();\r\n  const arr2 = Array(12).fill();\r\n  const arr3 = Array(12).fill();\r\n  const arr4 = Array(12).fill();\r\n  const arr5 = Array(12).fill();\r\n  return [arr0, arr1, arr2, arr3, arr4, arr5];\r\n};\r\n\r\nexport const getFieldIndexes = cards => {\r\n  const field = getFieldUndefined();\r\n  cards.forEach((card, index) => (field[card.x][card.y] = index));\r\n  return field;\r\n};\r\n\r\nexport const getFieldRandom = () =>\r\n  Array(36)\r\n    .fill(undefined)\r\n    .map((_, index) => ({\r\n      x: Math.floor(index / 6),\r\n      y: index % 6,\r\n      value: getNewCardValue(Math.floor(index / 6)),\r\n      duration: 0\r\n    }));\r\n\r\nexport const getFieldPrepared = field => {\r\n  let matchedIndexes = 1;\r\n  while (matchedIndexes) {\r\n    matchedIndexes = getMatchedIndexes(field);\r\n    if (!matchedIndexes.length) return field;\r\n    field = getCardsFallen(getCardsMatched(field, matchedIndexes));\r\n  }\r\n};\r\n\r\nexport const getFieldInitial = () => getFieldPrepared(getFieldRandom());\r\n\r\nexport const getCardsFallen = cards => {\r\n  const result = [];\r\n  const field = getFieldIndexes(cards);\r\n  for (let x in field) {\r\n    let count = 0;\r\n    for (let y in field[x]) {\r\n      const index = field[x][y];\r\n      if (index !== undefined) {\r\n        const card = cards[index];\r\n        result[index] = {\r\n          x: card.x,\r\n          y: y - count,\r\n          value: card.value,\r\n          duration: 100 * Math.sqrt(2 * count)\r\n        };\r\n      } else ++count;\r\n    }\r\n  }\r\n  return result;\r\n};\r\n\r\nexport const getMatchedIndexes = cards => {\r\n  const field = getFieldIndexes(cards);\r\n  let groupedArray = [];\r\n  let count = 0;\r\n  const group = index => {\r\n    const { value, x, y } = cards[index];\r\n    if (groupedArray[index]) return;\r\n    groupedArray[index] = { value, group: count };\r\n    let topIndex, rightIndex, bottomIndex, leftIndex;\r\n    if (y < 5) topIndex = field[x][y + 1];\r\n    if (x < 5) rightIndex = field[x + 1][y];\r\n    if (y > 0) bottomIndex = field[x][y - 1];\r\n    if (x > 0) leftIndex = field[x - 1][y];\r\n    const isSameValue = index => index && cards[index].value === value;\r\n    if (isSameValue(topIndex)) group(topIndex);\r\n    if (isSameValue(rightIndex)) group(rightIndex);\r\n    if (isSameValue(bottomIndex)) group(bottomIndex);\r\n    if (isSameValue(leftIndex)) group(leftIndex);\r\n  };\r\n  for (let index in cards) {\r\n    ++count;\r\n    group(index);\r\n  }\r\n  const groupedObject = groupedArray.reduce(\r\n    (result, { value, group }, index) => ({\r\n      ...result,\r\n      [group]: {\r\n        value,\r\n        indexes: [...(result[group] ? result[group].indexes : []), index]\r\n      }\r\n    }),\r\n    {}\r\n  );\r\n  return Object.keys(groupedObject).reduce((result, group) => {\r\n    const { value, indexes } = groupedObject[group];\r\n    return value === indexes.length ? [...result, ...indexes] : result;\r\n  }, []);\r\n};\r\n\r\nexport const getCardsMatched = (cards, matchedIndexes) => {\r\n  let counts = [0, 0, 0, 0, 0, 0];\r\n  const getNewY = x => counts[x] + cards.filter(card => card.x === x).sort(({ y: y1 }, { y: y2 }) => y1 - y2)[5].y;\r\n  return cards.map((card, index) => {\r\n    if (matchedIndexes.includes(index) && card.y < 6) {\r\n      ++counts[card.x];\r\n      return {\r\n        x: card.x,\r\n        y: getNewY(card.x),\r\n        value: getNewCardValue(card.x),\r\n        duration: 0\r\n      };\r\n    } else return card;\r\n  });\r\n};\r\n\r\nexport const getCardsPlusOne = (cards, plusIndex) =>\r\n  cards.map((card, cardIndex) =>\r\n    plusIndex === cardIndex && card.y < 6\r\n      ? {\r\n          x: card.x,\r\n          y: card.y,\r\n          value: card.value < 9 ? card.value + 1 : 0,\r\n          duration: 0\r\n        }\r\n      : card\r\n  );\r\n","import { writable } from \"svelte/store\";\r\nimport { getFieldInitial } from \"./utils.js\";\r\n\r\nexport const score = writable(0);\r\n\r\nexport const hiScore = writable(0);\r\n\r\nexport const phase = writable(\"input\");\r\n\r\nexport const cards = writable(getFieldInitial());\r\n\r\nexport const energy = writable(100);\r\n\r\nexport const shake = writable(0);\r\n\r\nexport const sfx = writable(0);\r\n","<script>\n  export let index,\n    phase,\n    plused,\n    matched,\n    duration,\n    value,\n    x = 0,\n    y = 0;\n\n  $: nextValue = value < 9 ? value + 1 : 0;\n\n  $: style = `\n    transition-duration: ${phase === \"fall\" ? duration : 0}ms;\n    left: var(--pixel-${x * 21});\n    bottom: var(--pixel-${y * 21});\n  `;\n</script>\n\n<style>\n  .card {\n    box-shadow: var(--shadow-2);\n    height: var(--pixel-21);\n    position: absolute;\n    transition-property: bottom;\n    transition-timing-function: cubic-bezier(0.56, 0, 1, 1);\n    width: var(--pixel-21);\n    will-change: bottom;\n  }\n  .current,\n  .next {\n    backface-visibility: hidden;\n    background-color: var(--color);\n    color: white;\n    font-size: var(--pixel-13);\n    height: var(--pixel-21);\n    line-height: var(--pixel-21);\n    position: absolute;\n    text-align: center;\n    width: var(--pixel-21);\n    z-index: 1;\n  }\n  .next {\n    transform: rotateY(-180deg);\n  }\n  .plused {\n    box-shadow: var(--shadow-1);\n    perspective: var(--game-width);\n    z-index: 2;\n  }\n  .plused .value {\n    transform-style: preserve-3d;\n    transform: rotateY(-180deg);\n    transition: transform 400ms ease;\n  }\n  .matched .current {\n    animation: blink 150ms steps(3, end) 2;\n  }\n  .value-0 {\n    --color: hsl(60, 20%, 40%);\n  }\n  .value-1 {\n    --color: hsl(90, 100%, 55%);\n  }\n  .value-2 {\n    --color: hsl(48, 100%, 50%);\n  }\n  .value-3 {\n    --color: hsl(32, 100%, 50%);\n  }\n  .value-4 {\n    --color: hsl(4, 100%, 55%);\n  }\n  .value-5 {\n    --color: hsl(334, 100%, 65%);\n  }\n  .value-6 {\n    --color: hsl(296, 100%, 40%);\n  }\n  .value-7 {\n    --color: hsl(248, 100%, 60%);\n  }\n  .value-8 {\n    --color: hsl(206, 100%, 55%);\n  }\n  .value-9 {\n    --color: hsl(164, 100%, 45%);\n  }\n  @media (min-aspect-ratio: 2/3) {\n    .card:hover {\n      box-shadow: none;\n      cursor: pointer;\n      z-index: 2;\n    }\n    .card:hover .current,\n    .card:hover .next {\n      box-shadow: var(--shadow-1);\n    }\n  }\n  @keyframes blink {\n    from {\n      background-color: white;\n      color: var(--color);\n    }\n    to {\n      background-color: var(--color);\n      color: white;\n    }\n  }\n</style>\n\n<div class=\"card\" class:plused class:matched {style} data-index={index}>\n  <div class=\"value\">\n    <div class=\"current value-{value}\">{value}</div>\n    <div class=\"next value-{nextValue}\">{nextValue}</div>\n  </div>\n</div>\n","<script>\n  import { cards, energy, phase } from \"./stores.js\";\n  import {\n    getCardsFallen,\n    getCardsMatched,\n    getCardsPlusOne,\n    getMatchedIndexes\n  } from \"./utils.js\";\n  import Card from \"./Card.svelte\";\n\n  let plusIndex;\n  let matchedIndexes = [];\n\n  phase.subscribe(value => {\n    switch (value) {\n      case \"plus\":\n        cards.set(getCardsPlusOne($cards, plusIndex));\n        phase.set(\"blink\");\n        break;\n      case \"blink\":\n        plusIndex = undefined;\n        matchedIndexes = getMatchedIndexes($cards);\n        if (matchedIndexes.length) {\n          window.setTimeout(() => phase.set(\"match\"), 400);\n        } else if ($energy < 10) {\n          phase.set(\"gameover\");\n        } else {\n          if ($energy > 100) energy.set(100);\n          phase.set(\"input\");\n        }\n        break;\n      case \"match\":\n        const energyDiff = matchedIndexes.reduce(\n          (result, value) => result + $cards[value].value,\n          0\n        );\n        energy.set($energy + energyDiff);\n        cards.set(getCardsMatched($cards, matchedIndexes));\n        matchedIndexes = [];\n        window.setTimeout(() => phase.set(\"fall\"), 600);\n        break;\n      case \"fall\":\n        cards.set(getCardsFallen($cards));\n        window.setTimeout(() => phase.set(\"blink\"), 400);\n        break;\n      case \"gameover\":\n        alert(\"GAME OVER\");\n    }\n  });\n\n  const getTargetDataIndex = ({ dataset, parentNode }) => {\n    if (dataset && dataset.index) return dataset.index;\n    if (parentNode) return getTargetDataIndex(parentNode);\n  };\n\n  const handleBoardClick = ({ target }) => {\n    if ($phase !== \"input\" || plusIndex) return;\n    plusIndex = Number(getTargetDataIndex(target));\n    if (typeof plusIndex === \"number\") {\n      energy.set($energy - 10);\n      window.setTimeout(() => phase.set(\"plus\"), 400);\n    }\n  };\n</script>\n\n<style>\n  .board {\n    background: hsl(60, 20%, 20%)\n      url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"8\" height=\"8\" fill-opacity=\"0.5\"><rect x=\"4\" width=\"4\" height=\"4\" /><rect y=\"4\" width=\"4\" height=\"4\" /></svg>');\n    background-size: var(--pixel-6) var(--pixel-6);\n    border: var(--pixel) solid white;\n    box-sizing: border-box;\n    height: var(--game-width);\n    overflow: hidden;\n    position: relative;\n    width: var(--game-width);\n  }\n</style>\n\n<div class=\"board\" on:click={handleBoardClick}>\n  {#each $cards as card, index}\n    <Card\n      phase={$phase}\n      plused={plusIndex === index}\n      matched={matchedIndexes.includes(index)}\n      {...card}\n      {index} />\n  {/each}\n</div>\n","<script>\n  import { energy } from \"./stores.js\";\n\n  const getBarWidth = value => {\n    if (value > 100) return 100;\n    if (value < 0) return 0;\n    return value;\n  };\n</script>\n\n<style>\n  .energy {\n    background-color: hsl(60, 20%, 30%);\n    flex-basis: var(--pixel-11);\n    overflow: hidden;\n  }\n  .bar {\n    align-items: center;\n    background-color: white;\n    display: flex;\n    height: 100%;\n    justify-content: flex-end;\n    transition: width 200ms ease-in;\n  }\n  .value {\n    color: hsl(60, 20%, 30%);\n    font-size: var(--pixel-7);\n    letter-spacing: var(--pixel);\n    line-height: 1;\n  }\n</style>\n\n<div class=\"energy\">\n  <div class=\"bar\" style={`width: ${getBarWidth($energy)}%`}>\n    <span class=\"value\">{$energy}</span>\n  </div>\n</div>\n","<script>\n  import { score } from \"./stores.js\";\n</script>\n\n<style>\n  .score {\n    color: white;\n    font-size: var(--pixel-7);\n    line-height: 1;\n    margin-right: var(--pixel-5);\n    text-align: right;\n  }\n</style>\n\n<span class=\"score\">{$score}</span>\n","<script>\n  import Board from \"./Board.svelte\";\n  import Energy from \"./Energy.svelte\";\n  import Score from \"./Score.svelte\";\n\n  const handleFullscreenSwitch = () => {\n    const { documentElement, fullscreen } = document;\n    if (fullscreen) {\n      document.exitFullscreen();\n    } else {\n      documentElement.requestFullscreen();\n    }\n  };\n</script>\n\n<style>\n  .game {\n    background-color: hsl(60, 20%, 60%);\n    box-shadow: 0 0 10vh 5vh rgba(0, 0, 0, 0.5);\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n    justify-content: space-evenly;\n    margin: auto;\n    width: var(--game-width);\n  }\n  .digifall {\n    background-color: white;\n    flex-basis: var(--pixel-37);\n  }\n</style>\n\n<div class=\"game\">\n  <button class=\"digifall\" on:click={handleFullscreenSwitch}>Digifall</button>\n  <Score />\n  <Board />\n  <Energy />\n</div>\n","<script>\n  import { phase, energy } from \"./stores.js\";\n  import Game from \"./Game.svelte\";\n\n  const shuffleArray = array => {\n    for (let i = array.length - 1; i > 0; --i) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  };\n\n  const getRandomColor = (lightness = 10) =>\n    `hsl(${Math.floor(Math.random() * 360)},100%,${lightness}%)`;\n\n  const getNewAppStyle = () => {\n    const [a, b, c, d] = shuffleArray([\n      7,\n      11,\n      13,\n      17,\n      19,\n      23,\n      29,\n      31,\n      37,\n      41,\n      43,\n      47,\n      53,\n      59,\n      61,\n      67,\n      71,\n      73,\n      79,\n      83,\n      89,\n      97\n    ]);\n    return `\n      background-color: ${getRandomColor()};\n      background-image:\n        linear-gradient(90deg, ${getRandomColor()} 50%, transparent 50%),\n        linear-gradient(90deg, ${getRandomColor()} 50%, transparent 50%),\n        linear-gradient(90deg, transparent 50%, ${getRandomColor()} 50%),\n        linear-gradient(90deg, transparent 50%, ${getRandomColor()} 50%);\n      background-position: center;\n      background-size:\n        calc(${a} * var(--pixel)),\n        calc(${b} * var(--pixel)),\n        calc(${c} * var(--pixel)),\n        calc(${d} * var(--pixel));\n  `;\n  };\n\n  let style = getNewAppStyle();\n\n  window.onresize = () => {\n    style =\n      window.innerHeight / window.innerWidth > 1.5\n        ? undefined\n        : getNewAppStyle();\n  };\n</script>\n\n<style>\n  .app {\n    overflow: hidden;\n  }\n</style>\n\n<svelte:window\n  on:keypress={({ key }) => {\n    if (key === '1') energy.set(10);\n    if (key === '0') energy.set(100);\n  }} />\n\n<div class=\"app\" {style}>\n  <span style=\"color: white; position: absolute\">{$phase}</span>\n  <Game />\n</div>\n","import App from \"./App.svelte\";\n\nvar app = new App({\n  target: document.body\n});\n\nexport default app;\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","set_style","key","important","style","setProperty","toggle_class","toggle","classList","current_component","set_current_component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flush","length","shift","update","pop","i","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","d","globals","window","global","create_component","mount_component","on_mount","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","ready","ret","rest","hydrate","l","Array","from","childNodes","children","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","getRandr","prev","BigInt","getNewCardValue","seed","randrz","count","result","getRandrzInitial","column","Number","createGetNewCardValue","prompt","Date","now","String","match","slice","parseInt","join","getFieldIndexes","cards","field","card","x","y","getCardsFallen","undefined","duration","Math","sqrt","getMatchedIndexes","groupedArray","group","topIndex","rightIndex","bottomIndex","leftIndex","isSameValue","groupedObject","reduce","indexes","keys","getCardsMatched","matchedIndexes","counts","includes","sort","y1","y2","score","phase","getFieldPrepared","_","floor","energy","plused","matched","nextValue","levels","updates","to_null_out","accounted_for","$$scope","n","spread_props","r","iterations","plusIndex","cardIndex","getCardsPlusOne","$cards","setTimeout","$energy","energyDiff","alert","getTargetDataIndex","dataset","$phase","documentElement","fullscreen","exitFullscreen","requestFullscreen","shuffleArray","array","j","random","getRandomColor","lightness","getNewAppStyle","onresize","innerHeight","innerWidth","body"],"mappings":"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"}